{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Project\\\\Smart Hydroponics\\\\swasema_project\\\\frontend-dashboard\\\\src\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.jsx\nimport { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport Swal from \"sweetalert2\";\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend, ArcElement } from \"chart.js\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend, ArcElement);\nexport default function Dashboard() {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    tds: 0,\n    ph: 0,\n    tempAir: 0,\n    tempUdara: 0,\n    humidity: 0,\n    timestamp: new Date().toISOString()\n  });\n  const [selectedParam, setSelectedParam] = useState(\"ph\");\n  const [history, setHistory] = useState({\n    ph: [],\n    tds: [],\n    tempAir: [],\n    tempUdara: [],\n    humidity: [],\n    labels: []\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const dummyData = {\n        tds: Math.floor(Math.random() * 1600),\n        ph: +(Math.random() * 3 + 4.5).toFixed(2),\n        tempAir: +(Math.random() * 10 + 18).toFixed(1),\n        tempUdara: +(Math.random() * 10 + 18).toFixed(1),\n        humidity: Math.floor(Math.random() * 50 + 40),\n        timestamp: new Date().toISOString()\n      };\n      setSensorData(dummyData);\n      setHistory(prev => ({\n        ...prev,\n        ph: [...prev.ph.slice(-9), dummyData.ph],\n        tds: [...prev.tds.slice(-9), dummyData.tds],\n        tempAir: [...prev.tempAir.slice(-9), dummyData.tempAir],\n        tempUdara: [...prev.tempUdara.slice(-9), dummyData.tempUdara],\n        humidity: [...prev.humidity.slice(-9), dummyData.humidity],\n        labels: [...prev.labels.slice(-9), new Date(dummyData.timestamp).toLocaleTimeString()]\n      }));\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const params = [\"ph\", \"tds\", \"tempAir\", \"tempUdara\", \"humidity\"];\n    params.forEach(param => {\n      const status = getStatus(param, sensorData[param]);\n      if (status === \"Poor\") {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Peringatan!\",\n          text: `${param.toUpperCase()} berada di zona merah!`,\n          timer: 4000,\n          showConfirmButton: false\n        });\n      }\n    });\n  }, [sensorData]);\n  const handleCardClick = param => {\n    setSelectedParam(param);\n  };\n  const handlePumpControl = async type => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/pump/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const result = await res.json();\n      alert(result.message);\n    } catch (error) {\n      alert(\"Gagal mengaktifkan pompa.\");\n    }\n  };\n  const getGaugePercent = (param, value) => {\n    let min = 1,\n      max = 6;\n    switch (param) {\n      case \"ph\":\n        min = 4;\n        max = 8;\n        break;\n      case \"tds\":\n        min = 600;\n        max = 1400;\n        break;\n      case \"tempAir\":\n        min = 17;\n        max = 28;\n        break;\n      case \"tempUdara\":\n        min = 17;\n        max = 27;\n        break;\n      case \"humidity\":\n        min = 45;\n        max = 93;\n        break;\n    }\n    return Math.min(Math.max((value - min) / (max - min), 0), 1);\n  };\n  const getStatus = (param, value) => {\n    if (param === \"ph\") {\n      if (value < 5.0 || value > 7.0) return \"Poor\";\n      if (value < 5.8 || value > 6.4) return \"Fair\";\n      return \"Excellent\";\n    } else if (param === \"tds\") {\n      if (value < 700 || value > 1300) return \"Poor\";\n      if (value < 800 || value > 1200) return \"Fair\";\n      return \"Excellent\";\n    } else if (param === \"tempAir\") {\n      if (value < 18 || value > 27) return \"Poor\";\n      if (value < 20 || value > 25) return \"Fair\";\n      return \"Excellent\";\n    } else if (param === \"tempUdara\") {\n      if (value < 18 || value > 26) return \"Poor\";\n      if (value < 20 || value > 24) return \"Fair\";\n      return \"Excellent\";\n    } else if (param === \"humidity\") {\n      if (value < 55 || value > 83) return \"Poor\";\n      if (value < 65 || value > 78) return \"Fair\";\n      return \"Excellent\";\n    }\n    return \"Excellent\";\n  };\n  const renderCard = (param, label, value) => {\n    const status = getStatus(param, value);\n    const percent = getGaugePercent(param, value);\n    const doughnutData = {\n      datasets: [{\n        data: [percent, 1 - percent],\n        backgroundColor: [status === \"Poor\" ? \"#ef4444\" : status === \"Fair\" ? \"#facc15\" : \"#4ade80\", \"#e5e7eb\"],\n        borderWidth: 0,\n        cutout: \"70%\"\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sensor-card ${selectedParam === param ? \"active\" : \"\"}`,\n      onClick: () => handleCardClick(param),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gauge-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: doughnutData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [value, \" \", param === \"humidity\" ? \"%\" : param === \"tds\" ? \"ppm\" : param.includes(\"temp\") ? \"Â°C\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-text ${status === \"Fair\" ? \"status-fair\" : status === \"Poor\" ? \"status-poor\" : \"\"}`,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n  const chartData = {\n    labels: history.labels,\n    datasets: [{\n      label: selectedParam,\n      data: history[selectedParam],\n      fill: false,\n      borderColor: \"#4ade80\",\n      backgroundColor: \"#4ade80\",\n      tension: 0.4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Sw\\xE1s\\xEAm\\xE2 Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: new Date(sensorData.timestamp).toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-grid\",\n      children: [renderCard(\"ph\", \"pH Air\", sensorData.ph), renderCard(\"tds\", \"TDS\", sensorData.tds), renderCard(\"tempAir\", \"Suhu Air\", sensorData.tempAir), renderCard(\"tempUdara\", \"Temp Udara\", sensorData.tempUdara), renderCard(\"humidity\", \"Kelembapan\", sensorData.humidity)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Kontrol Pompa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePumpControl(\"nutrientA\"),\n          children: \"Nutrien A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePumpControl(\"nutrientB\"),\n          children: \"Nutrien B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePumpControl(\"phUp\"),\n          children: \"pH Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePumpControl(\"phDown\"),\n          children: \"pH Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"NlOP3MWAFsDE34teG6Ek458ADYg=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","Swal","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","ArcElement","Line","Doughnut","jsxDEV","_jsxDEV","register","Dashboard","_s","sensorData","setSensorData","tds","ph","tempAir","tempUdara","humidity","timestamp","Date","toISOString","selectedParam","setSelectedParam","history","setHistory","labels","interval","setInterval","dummyData","Math","floor","random","toFixed","prev","slice","toLocaleTimeString","clearInterval","params","forEach","param","status","getStatus","fire","icon","title","text","toUpperCase","timer","showConfirmButton","handleCardClick","handlePumpControl","type","res","fetch","method","headers","result","json","alert","message","error","getGaugePercent","value","min","max","renderCard","label","percent","doughnutData","datasets","data","backgroundColor","borderWidth","cutout","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","chartData","fill","borderColor","tension","toLocaleString","_c","$RefreshReg$"],"sources":["Z:/Project/Smart Hydroponics/swasema_project/frontend-dashboard/src/Dashboard/Dashboard.jsx"],"sourcesContent":["// src/pages/Dashboard.jsx\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from \"chart.js\";\r\nimport { Line, Doughnut } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\nexport default function Dashboard() {\r\n  const [sensorData, setSensorData] = useState({\r\n    tds: 0,\r\n    ph: 0,\r\n    tempAir: 0,\r\n    tempUdara: 0,\r\n    humidity: 0,\r\n    timestamp: new Date().toISOString(),\r\n  });\r\n\r\n  const [selectedParam, setSelectedParam] = useState(\"ph\");\r\n  const [history, setHistory] = useState({\r\n    ph: [],\r\n    tds: [],\r\n    tempAir: [],\r\n    tempUdara: [],\r\n    humidity: [],\r\n    labels: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const dummyData = {\r\n        tds: Math.floor(Math.random() * 1600),\r\n        ph: +(Math.random() * 3 + 4.5).toFixed(2),\r\n        tempAir: +(Math.random() * 10 + 18).toFixed(1),\r\n        tempUdara: +(Math.random() * 10 + 18).toFixed(1),\r\n        humidity: Math.floor(Math.random() * 50 + 40),\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      setSensorData(dummyData);\r\n      setHistory((prev) => ({\r\n        ...prev,\r\n        ph: [...prev.ph.slice(-9), dummyData.ph],\r\n        tds: [...prev.tds.slice(-9), dummyData.tds],\r\n        tempAir: [...prev.tempAir.slice(-9), dummyData.tempAir],\r\n        tempUdara: [...prev.tempUdara.slice(-9), dummyData.tempUdara],\r\n        humidity: [...prev.humidity.slice(-9), dummyData.humidity],\r\n        labels: [\r\n          ...prev.labels.slice(-9),\r\n          new Date(dummyData.timestamp).toLocaleTimeString(),\r\n        ],\r\n      }));\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = [\"ph\", \"tds\", \"tempAir\", \"tempUdara\", \"humidity\"];\r\n    params.forEach((param) => {\r\n      const status = getStatus(param, sensorData[param]);\r\n      if (status === \"Poor\") {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Peringatan!\",\r\n          text: `${param.toUpperCase()} berada di zona merah!`,\r\n          timer: 4000,\r\n          showConfirmButton: false,\r\n        });\r\n      }\r\n    });\r\n  }, [sensorData]);\r\n\r\n  const handleCardClick = (param) => {\r\n    setSelectedParam(param);\r\n  };\r\n\r\n  const handlePumpControl = async (type) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/pump/${type}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const result = await res.json();\r\n      alert(result.message);\r\n    } catch (error) {\r\n      alert(\"Gagal mengaktifkan pompa.\");\r\n    }\r\n  };\r\n\r\n  const getGaugePercent = (param, value) => {\r\n    let min = 1,\r\n      max = 6;\r\n    switch (param) {\r\n      case \"ph\":\r\n        min = 4;\r\n        max = 8;\r\n        break;\r\n      case \"tds\":\r\n        min = 600;\r\n        max = 1400;\r\n        break;\r\n      case \"tempAir\":\r\n        min = 17;\r\n        max = 28;\r\n        break;\r\n      case \"tempUdara\":\r\n        min = 17;\r\n        max = 27;\r\n        break;\r\n      case \"humidity\":\r\n        min = 45;\r\n        max = 93;\r\n        break;\r\n    }\r\n    return Math.min(Math.max((value - min) / (max - min), 0), 1);\r\n  };\r\n\r\n  const getStatus = (param, value) => {\r\n    if (param === \"ph\") {\r\n      if (value < 5.0 || value > 7.0) return \"Poor\";\r\n      if (value < 5.8 || value > 6.4) return \"Fair\";\r\n      return \"Excellent\";\r\n    } else if (param === \"tds\") {\r\n      if (value < 700 || value > 1300) return \"Poor\";\r\n      if (value < 800 || value > 1200) return \"Fair\";\r\n      return \"Excellent\";\r\n    } else if (param === \"tempAir\") {\r\n      if (value < 18 || value > 27) return \"Poor\";\r\n      if (value < 20 || value > 25) return \"Fair\";\r\n      return \"Excellent\";\r\n    } else if (param === \"tempUdara\") {\r\n      if (value < 18 || value > 26) return \"Poor\";\r\n      if (value < 20 || value > 24) return \"Fair\";\r\n      return \"Excellent\";\r\n    } else if (param === \"humidity\") {\r\n      if (value < 55 || value > 83) return \"Poor\";\r\n      if (value < 65 || value > 78) return \"Fair\";\r\n      return \"Excellent\";\r\n    }\r\n    return \"Excellent\";\r\n  };\r\n\r\n  const renderCard = (param, label, value) => {\r\n    const status = getStatus(param, value);\r\n    const percent = getGaugePercent(param, value);\r\n    const doughnutData = {\r\n      datasets: [\r\n        {\r\n          data: [percent, 1 - percent],\r\n          backgroundColor: [\r\n            status === \"Poor\"\r\n              ? \"#ef4444\"\r\n              : status === \"Fair\"\r\n              ? \"#facc15\"\r\n              : \"#4ade80\",\r\n            \"#e5e7eb\",\r\n          ],\r\n          borderWidth: 0,\r\n          cutout: \"70%\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`sensor-card ${selectedParam === param ? \"active\" : \"\"}`}\r\n        onClick={() => handleCardClick(param)}\r\n      >\r\n        <h2>{label}</h2>\r\n        <div className=\"gauge-wrapper\">\r\n          <Doughnut data={doughnutData} />\r\n        </div>\r\n        <p>\r\n          {value}{\" \"}\r\n          {param === \"humidity\"\r\n            ? \"%\"\r\n            : param === \"tds\"\r\n            ? \"ppm\"\r\n            : param.includes(\"temp\")\r\n            ? \"Â°C\"\r\n            : \"\"}\r\n        </p>\r\n        <div\r\n          className={`status-text ${\r\n            status === \"Fair\"\r\n              ? \"status-fair\"\r\n              : status === \"Poor\"\r\n              ? \"status-poor\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          {status}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const chartData = {\r\n    labels: history.labels,\r\n    datasets: [\r\n      {\r\n        label: selectedParam,\r\n        data: history[selectedParam],\r\n        fill: false,\r\n        borderColor: \"#4ade80\",\r\n        backgroundColor: \"#4ade80\",\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1 className=\"dashboard-title\">SwÃ¡sÃªmÃ¢ Dashboard</h1>\r\n      <p className=\"timestamp\">\r\n        {new Date(sensorData.timestamp).toLocaleString()}\r\n      </p>\r\n\r\n      <div className=\"sensor-grid\">\r\n        {renderCard(\"ph\", \"pH Air\", sensorData.ph)}\r\n        {renderCard(\"tds\", \"TDS\", sensorData.tds)}\r\n        {renderCard(\"tempAir\", \"Suhu Air\", sensorData.tempAir)}\r\n        {renderCard(\"tempUdara\", \"Temp Udara\", sensorData.tempUdara)}\r\n        {renderCard(\"humidity\", \"Kelembapan\", sensorData.humidity)}\r\n      </div>\r\n\r\n      <div className=\"panel\">\r\n        <Line data={chartData} />\r\n      </div>\r\n\r\n      <div className=\"panel control-panel\">\r\n        <h2>Kontrol Pompa</h2>\r\n        <div className=\"button-grid\">\r\n          <button onClick={() => handlePumpControl(\"nutrientA\")}>\r\n            Nutrien A\r\n          </button>\r\n          <button onClick={() => handlePumpControl(\"nutrientB\")}>\r\n            Nutrien B\r\n          </button>\r\n          <button onClick={() => handlePumpControl(\"phUp\")}>pH Up</button>\r\n          <button onClick={() => handlePumpControl(\"phDown\")}>pH Down</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}